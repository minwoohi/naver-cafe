<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
							"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace : 인터페이스명, id : 사용할 메소드명 -->
<!-- mapper 주석 : /**/  CONNECT BY 걸리면 LEVEL 필요-->

<mapper namespace="ReplyDao">

	<resultMap type="ReplyVO" id="replyMap">
		<id column="RPLY_ID" property="replyId" />
		<result column="LEVEL" property="level"/>
		<result column="R_MBR_ID" property="memberId"/>
		<result column="R_AR_ID" property="articleId"/>
		<result column="R_CONT" property="content"/>
		<result column="R_CRT_DT" property="createdDate"/>
		<result column="RCMND_CNT" property="recommendCount"/>
		<result column="PRNT_RPLY_ID" property="parentReplyId"/>
		
	<association property="clubVO" javaType="ClubVO">
		<id column="AR_ID" property="articleId"/>
		<result column="SBJ" property="subject"/>
		<result column="CONT" property="content"/>
		<result column="C_MBR_ID" property="memberId"/>
		<result column="C_CRT_DT" property="createdDate"/>
		<result column="C_MDFY_DT" property="modifiedDate"/>
		<result column="C_RD_CNT" property="readCount"/>
		<result column="C_MN_ID" property="menuId"/>
	</association>
	
	<association property="memberVO" javaType="MemberVO">
		<id column="MBR_ID" property="memberId"/>
		<result column="NCK_NM" property="nickName"/>
		<result column="AUTH" property="auth"/>
	</association>
	
	<!-- select 속성의 결과를 property에 넣어 매핑시키겠다. -->
	<association property="parentReplyVO" 
				javaType="ReplyVO" 
				column="PRNT_RPLY_ID"
				select="selectParentReply" />
	
	</resultMap>

	<select id="selectParentReply" resultMap="parentReplyMap" parameterType="string">
		SELECT	R.RPLY_ID
				, R.AR_ID R_AR_ID
				, R.CONT R_CONT
				, R.CRT_DT R_CRT_DT
				, R.MBR_ID R_MBR_ID
				, R.RCMND_CNT
				, R.PRNT_RPLY_ID
				, M.MBR_ID
				, M.NCK_NM
				, M.AUTH
		FROM	MBR M
				, RPLY R
		WHERE	M.MBR_ID = R.MBR_ID 
		AND		R.RPLY_ID = #{replyId}
	</select>
	
	<resultMap type="ReplyVO" id="parentReplyMap">
		<id column="RPLY_ID" property="replyId" />
		<result column="R_MBR_ID" property="memberId"/>
		<result column="R_AR_ID" property="articleId"/>
		<result column="R_CONT" property="content"/>
		<result column="R_CRT_DT" property="createdDate"/>
		<result column="RCMND_CNT" property="recommendCount"/>
		<result column="PRNT_RPLY_ID" property="parentReplyId"/>
		
		<association property="memberVO" javaType="MemberVO">
			<id column="MBR_ID" property="memberId"/>
			<result column="NCK_NM" property="nickName"/>
			<result column="AUTH" property="auth"/>
		</association>
	</resultMap>
	
	<!-- resultMap="replyMap" -->
	<select id="selectAllReplies"
			parameterType="string"
			resultMap="replyMap">
			
			SELECT	LEVEL
					, R.RPLY_ID
					, R.AR_ID R_AR_ID
					, R.CONT R_CONT
					, R.CRT_DT R_CRT_DT
					, R.MBR_ID R_MBR_ID
					, R.RCMND_CNT
					, R.PRNT_RPLY_ID
					, C.AR_ID
					, C.SBJ
					, C.CONT
					, C.MBR_ID C_MBR_ID
					, C.CRT_DT C_CRT_DT
					, C.MDFY_DT C_MDFY_DT
					, C.RD_CNT C_RD_CNT
					, C.MN_ID C_MN_ID
			FROM	CLB C
					, RPLY R
			WHERE	R.AR_ID = C.AR_ID
			AND		R.AR_ID = #{articleId}
			START	WITH R.PRNT_RPLY_ID IS NULL
			CONNECT	BY PRIOR R.RPLY_ID = R.PRNT_RPLY_ID
			/* 계층을 통째로 정렬 */
			ORDER	SIBLINGS BY R.CRT_DT
			
			<!-- SELECT	LEVEL
					, R.RPLY_ID
					, R.AR_ID R_AR_ID
					, R.CONT R_CONT
					, R.CRT_DT R_CRT_DT
					, R.MBR_ID R_MBR_ID
					, R.RCMND_CNT
					, R.PRNT_RPLY_ID
					, C.AR_ID
					, C.SBJ
					, C.CONT
					, C.MBR_ID C_MBR_ID
					, C.CRT_DT C_CRT_DT
					, C.MDFY_DT C_MDFY_DT
					, C.RD_CNT C_RD_CNT
					, C.MN_ID C_MN_ID
					, M.MBR_ID
					, M.NCK_NM
					, M.AUTH
			FROM	CLB C
					, MBR M
					, RPLY R
			WHERE	C.MBR_ID = M.MBR_ID
			 AND		C.MBR_ID = R.MBR_ID
			AND		R.AR_ID = C.AR_ID
			AND		C.AR_ID = #{articleId}
			START	WITH R.PRNT_RPLY_ID IS NULL
			CONNECT	BY PRIOR R.RPLY_ID = R.PRNT_RPLY_ID
			/* 계층을 통째로 정렬 */
			ORDER	SIBLINGS BY R.CRT_DT -->
	</select>
	
	<select id="selectRepliesCount" parameterType="string" resultType="_int">
		SELECT	COUNT(1)
		FROM	RPLY	R
				, MBR M
		WHERE	R.MBR_ID = M.MBR_ID
		AND		R.AR_ID = #{articleId}
	</select>
	
	<insert id="insertOneReply"
			parameterType="ReplyVO">
		INSERT	INTO	RPLY (
								RPLY_ID
								, AR_ID
								, CONT
								, CRT_DT
								, MBR_ID
								, RCMND_CNT
								, PRNT_RPLY_ID
							)
		VALUES				(
								'RP-' || TO_CHAR(SYSDATE, 'MMMMYYDDHH24') || '-' || LPAD(RPLY_ID_SEQ.NEXTVAL, 6, '0')
								, #{articleId}
								, #{content}
								, SYSDATE
								, #{memberId}
								, 0
								, #{parentReplyId, jdbcType=VARCHAR}
							)
	</insert>
	
	<delete id="deleteOneReply"
			parameterType="string">
		UPDATE	RPLY
		SET		CONT = '삭제된 댓글입니다!'
		WHERE	RPLY_ID = #{replyId}	
	</delete>
	
	<update id="updateOneReply"
			parameterType="ReplyVO">
		UPDATE	RPLY
		SET		CONT = #{content}
		WHERE	RPLY_ID = #{replyId}
	</update>
</mapper>
